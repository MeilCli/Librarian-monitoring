name: CI

on:
  workflow_dispatch:
    inputs:
      use_cache:
        description: 'use cache for lint report xml'
        required: true
        default: 'true'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: 'MeilCli/Librarian'
          ref: 'master'
          path: 'Librarian'
      - uses: actions/cache@v2
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.use_cache == 'true'
        id: cache
        with:
          path: Librarian/reports/lint
          key: ${{ runner.os }}
      - uses: actions/setup-java@v1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          java-version: 1.8
      - uses: actions/cache@v2
        if: steps.cache.outputs.cache-hit != 'true'
        name: Cache Gradle
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('Librarian/buildSrc/build.gradle.kts') }}-${{ hashFiles('Librarian/buildSrc/src/**') }}-${{ hashFiles('Librarian/dependencies/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ hashFiles('Librarian/buildSrc/build.gradle.kts') }}-${{ hashFiles('Librarian/buildSrc/src/**') }}-
            ${{ runner.os }}-gradle-${{ hashFiles('Librarian/buildSrc/build.gradle.kts') }}-
            ${{ runner.os }}-gradle-
      - name: Grant permission
        if: steps.cache.outputs.cache-hit != 'true'
        run: chmod +x Librarian/gradlew
      - name: Run lint
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd Librarian && ./gradlew lintDebug
      - uses: actions/upload-artifact@v2
        with:
          name: lint-report
          path: |
            Librarian/reports/lint/**/**.xml
      - uses: MeilCli/android-lint-statistics@master
        with:
          lint_xml_file_path: 'Librarian/reports/lint/**/**.xml'
      - uses: actions/upload-artifact@v2
        with:
          name: lint-result
          path: |
            data.png
            severity.png
            priority.png
            report.json
            report.txt
      - uses: MeilCli/slack-upload-file@master
        id: data
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channels: ${{ secrets.SLACK_CHANNELS }}
          file_path: 'data.png'
          file_name: 'data.png'
          file_type: 'png'
      - uses: MeilCli/slack-upload-file@master
        id: severity
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channels: ${{ secrets.SLACK_CHANNELS }}
          file_path: 'severity.png'
          file_name: 'severity.png'
          file_type: 'png'
      - uses: MeilCli/slack-upload-file@master
        id: priority
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channels: ${{ secrets.SLACK_CHANNELS }}
          file_path: 'priority.png'
          file_name: 'priority.png'
          file_type: 'png' 
